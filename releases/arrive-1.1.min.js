/*
 * arrive.js
 * v1.1
 * https://github.com/uzairfarooq/arrive
 * MIT licensed
 *
 * Copyright (c) 2014 Uzair Farooq
 */

(function(r,s,n){function p(a,b,c){for(var d=0,e;e=a[d];d++)g.matchesSelector(e,b.selector)&&-1==b.firedElems.indexOf(e)&&(b.firedElems.push(e),c.push({callback:b.callback,elem:e})),0<e.childNodes.length&&p(e.childNodes,b,c)}function t(a){for(var b=0,c;c=a[b];b++)c.callback.call(c.elem)}function k(a){a.arrive=l.bindEvent;g.addMethod(a,"unbindArrive",l.unbindEvent);g.addMethod(a,"unbindArrive",l.unbindEventWithSelectorOrCallback);g.addMethod(a,"unbindArrive",l.unbindEventWithSelectorAndCallback);a.leave=
m.bindEvent;g.addMethod(a,"unbindLeave",m.unbindEvent);g.addMethod(a,"unbindLeave",m.unbindEventWithSelectorOrCallback);g.addMethod(a,"unbindLeave",m.unbindEventWithSelectorAndCallback)}var g=function(){var a=HTMLElement.prototype.matches||HTMLElement.prototype.webkitMatchesSelector||HTMLElement.prototype.mozMatchesSelector||HTMLElement.prototype.msMatchesSelector;return{matchesSelector:function(b,c){return a.call(b,c)},addMethod:function(b,c,a){var e=b[c];b[c]=function(){if(a.length==arguments.length)return a.apply(this,
arguments);if("function"==typeof e)return e.apply(this,arguments)}}}}(),u=function(){var a=function(){this._eventsBucket=[];this._beforeRemoving=this._beforeAdding=null};a.prototype.addEvent=function(b,c,a){b={target:b,selector:c,callback:a,firedElems:[]};this._beforeAdding&&this._beforeAdding(b);this._eventsBucket.push(b);return b};a.prototype.removeEvent=function(b){for(var c=this._eventsBucket.length-1,a;a=this._eventsBucket[c];c--)b(a)&&(this._beforeRemoving&&this._beforeRemoving(a),this._eventsBucket.splice(c,
1))};a.prototype.beforeAdding=function(a){this._beforeAdding=a};a.prototype.beforeRemoving=function(a){this._beforeRemoving=a};return a}();n=function(a,b){function c(a){if(a instanceof HTMLElement||a instanceof HTMLDocument||a instanceof Window)a=[a];return a}var d=new u;d.beforeAdding(function(c){var h=c.target,f;if(h===r.document||h===r)h=document.body.parentNode;f=new MutationObserver(function(a){b.call(this,a,c)});f.observe(h,a);c.observer=f});d.beforeRemoving(function(a){a.observer.disconnect()});
this.bindEvent=function(a,b){for(var f=c(this),q=0;q<f.length;q++)d.addEvent(f[q],a,b)};this.unbindEvent=function(){var a=c(this);d.removeEvent(function(c){for(var b=0;b<a.length;b++)if(c.target===a[b])return!0;return!1})};this.unbindEventWithSelectorOrCallback=function(a){var b=c(this);d.removeEvent("function"===typeof a?function(c){for(var d=0;d<b.length;d++)if(c.target===b[d]&&c.callback===a)return!0;return!1}:function(c){for(var d=0;d<b.length;d++)if(c.target===b[d]&&c.selector===a)return!0;return!1})};
this.unbindEventWithSelectorAndCallback=function(a,b){var f=c(this);d.removeEvent(function(c){for(var d=0;d<f.length;d++)if(c.target===f[d]&&c.selector===a&&c.callback===b)return!0;return!1})};return this};var l=new n({attributes:!0,childList:!0,subtree:!0},function(a,b){a.forEach(function(a){var d=a.addedNodes,e=a.target,h=[];null!==d&&0<d.length?p(d,b,h):"attributes"===a.type&&g.matchesSelector(e,b.selector)&&-1==b.firedElems.indexOf(e)&&(b.firedElems.push(e),h.push({callback:b.callback,elem:e}));
t(h)})}),m=new n({childList:!0,subtree:!0},function(a,b){a.forEach(function(a){a=a.removedNodes;var d=[];null!==a&&0<a.length&&p(a,b,d);t(d)})});s&&k(s.fn);k(HTMLElement.prototype);k(HTMLDocument.prototype);k(Window.prototype)})(this,jQuery);